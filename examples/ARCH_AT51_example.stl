# Automatically generated STL formula
# Model: ARCH_AT51_example
# Requirement: ARCH_AT51_example
# Author: Johan Lidén Eddeland

# The following systems have been skipped and logged:

# Parameters
param t_init = 0, t_final = 10, dt = 0.04, fixedStepSize = 0.04

############
# Constant #
############
# ARCH_AT51_example_sub1 := 2.5
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ARCH_AT51_example_sub2 := fixedStepSize
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

##########
# Inport #
##########
# ARCH_AT51_example_sub3 := gear[t]
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

############
# Constant #
############
# ARCH_AT51_example_sub4 := 1
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ARCH_AT51_example_sub5 := (gear[t] == 1)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#############
# SubSystem #
#############
# ARCH_AT51_example_sub6 := (gear[t] == 1) and not((gear[t-1*dt] == 1))
# Depth: 		3
# Modal depth: 	0
# Start delay: 	1
# End delay: 	0
# Type: 		phi_exp

#############
# SubSystem #
#############
# ARCH_AT51_example_sub7 := (once_[0, 63*dt](((gear[t] == 1) and not((gear[t-1*dt] == 1)) and not((gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))) or (not((gear[t] == 1) and not((gear[t-1*dt] == 1))) and (gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))))
# Depth: 		5
# Modal depth: 	1
# Start delay: 	64
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ARCH_AT51_example_sub8 := not((once_[0, 63*dt](((gear[t] == 1) and not((gear[t-1*dt] == 1)) and not((gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))) or (not((gear[t] == 1) and not((gear[t-1*dt] == 1))) and (gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1))))))
# Depth: 		6
# Modal depth: 	1
# Start delay: 	64
# End delay: 	0
# Type: 		phi_exp

############
# Constant #
############
# ARCH_AT51_example_sub9 := 1
# Depth: 		0
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		signal_exp

######################
# RelationalOperator #
######################
# ARCH_AT51_example_sub10 := (gear[t] == 1)
# Depth: 		1
# Modal depth: 	0
# Start delay: 	0
# End delay: 	0
# Type: 		phi_exp

#########
# Logic #
#########
# ARCH_AT51_example_sub11 := (not((once_[0, 63*dt](((gear[t] == 1) and not((gear[t-1*dt] == 1)) and not((gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))) or (not((gear[t] == 1) and not((gear[t-1*dt] == 1))) and (gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1))))))  or  (gear[t] == 1))
# Depth: 		7
# Modal depth: 	1
# Start delay: 	64
# End delay: 	0
# Type: 		phi_exp

# =========== SUBREQUIREMENTS ============
# No prerequisites!
# phi_sub1 := (not((once_[0, 63*dt](((gear[t] == 1) and not((gear[t-1*dt] == 1)) and not((gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))) or (not((gear[t] == 1) and not((gear[t-1*dt] == 1))) and (gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1))))))  or  (gear[t] == 1))

# =========== FINAL REQUIREMENT ===========
# phi_implies is the formula when interpreting switches using "=>"
# phi_implies := (not((once_[0, 63*dt](((gear[t] == 1) and not((gear[t-1*dt] == 1)) and not((gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))) or (not((gear[t] == 1) and not((gear[t-1*dt] == 1))) and (gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1))))))  or  (gear[t] == 1))

ARCH_AT51_example := alw_[t_init + 64*dt,t_final]((not((once_[0, 63*dt](((gear[t] == 1) and not((gear[t-1*dt] == 1)) and not((gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1)))) or (not((gear[t] == 1) and not((gear[t-1*dt] == 1))) and (gear[t-1*dt] == 1) and not((gear[t-2*dt] == 1))))))  or  (gear[t] == 1)))

